syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "open-taxi-service-proto/validate.proto";

option go_package = "./;rpc";

service AuthenticationService {
    
    rpc sendAuthenticationCode (SendSmsCodeRemoteDataModel) returns (google.protobuf.Empty);
    
    rpc authenticate (AuthenticationRemoteDataModel) returns (google.protobuf.StringValue);

    rpc deauthenticate(google.protobuf.Empty) returns (google.protobuf.Empty) {};
}

message SendSmsCodeRemoteDataModel {
   
    enum AccountType {
        ADMIN = 0;
        DRIVER = 1;
        CLIENT = 2;
    }

    string phoneNumber = 1 [(validate.rules).string = {prefix: "+373", min_len: 12, max_len:12}];
    
    AccountType accountType = 2 [(validate.rules).enum = {in: [0,2]}];
}

message AuthenticationRemoteDataModel {
   
    string phoneNumber = 1 [(validate.rules).string = {prefix: "+373", min_len: 12, max_len:12}];
    
    int32 smsCode = 2 [(validate.rules).int32 = {gte: 100000, lte: 999999}];

    string idnp = 3 [(validate.rules).string = {ignore_empty: true, len: 13}];

    string firstName = 4 [(validate.rules).string = {
        ignore_empty: true,
        pattern:   "^[a-zA-Z]+$",
        min_bytes: 2,
        max_bytes: 50,
    }];

    string lastName = 5 [(validate.rules).string = {
        ignore_empty: true,
        pattern:   "^[a-zA-Z]+$",
        min_bytes: 2,
        max_bytes: 50,
    }];

    string email = 6 [(validate.rules).string = {ignore_empty: true,  email: true}]; // {ignore_empty: true, len: 2}]; // [(validate.rules).string.email = true];
}