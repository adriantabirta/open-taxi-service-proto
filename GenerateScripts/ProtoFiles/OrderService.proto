syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "ProtoFiles/Common.proto";
import "ProtoFiles/validate.proto";

option go_package = "./;rpc";

service OrderService {
    
    rpc createOrder(CreateOrderRemoteDataModel) returns (google.protobuf.Int64Value);
    
    rpc orderStatus(google.protobuf.Int64Value) returns (stream OrderRemoteDataModel);

    rpc sendChatMessage (google.protobuf.StringValue) returns (google.protobuf.Empty);
        
    rpc cancelOrder (CancelOrderRemoteDataModel) returns (google.protobuf.Empty);

    rpc nearestOrders (google.protobuf.Empty) returns (stream NearOrdersRemoteDataModel) {}

    rpc takeOrder (google.protobuf.Int64Value) returns (google.protobuf.Empty) {}

    rpc startTheRideForOrder(google.protobuf.Int64Value) returns (google.protobuf.Empty) {}

    rpc arrivedAtLocation(ArrivedAtLocationRemoteDataModel) returns (google.protobuf.Empty) {}

    rpc closeOrder(google.protobuf.Int64Value) returns (google.protobuf.Empty) {}
}

message NearOrdersRemoteDataModel {
   
    repeated ShortOrderRemoteDataModel orders = 2;
}

message ShortOrderRemoteDataModel {

    int64 id = 1;

    PaymentMethod paymentMethod = 2;

    repeated OrderLocationRemoteDataModel locations = 3;

    int32 routeDistance = 4;

    int32 estimatedPrice = 5;
}

message OrderLocationRemoteDataModel {

    string district = 1;

    string address = 2;
    
    CoordinateRemoteDataModel coordinate = 3;

    int32 distance = 4;
}

message CreateOrderRemoteDataModel {
    
    repeated LocationRemoteDataModel locations = 1 [(validate.rules).repeated = {min_items: 2, max_items: 5}];

    PaymentMethod paymentMethod = 2 [(validate.rules).enum.defined_only = true];
}

message OrderRemoteDataModel {
    
    enum RideStatus {
        RIDE_STATUS_SEARCHING_TAXI             = 0;
        RIDE_STATUS_DRIVING_TO_CLIENT          = 1;
        RIDE_STATUS_ARRIVED_TO_CLIENT_ADDRESS  = 2;
        RIDE_STATUS_WAITING_FOR_CLIENT         = 3;
        RIDE_STATUS_DRIVING_TO_DESTINATION     = 4;
        RIDE_STATUS_ARRIVED_AT_DESTINATION     = 5;
        RIDE_STATUS_CANCELED_BY_CLIENT         = 6;
        RIDE_STATUS_CANCELED_BY_DRIVER         = 7;
        RIDE_STATUS_CLOSED                     = 8;
    }
    
    message DriverRemoteDataModel {
        int64 id = 1;
        string name = 2;
        string phoneNumber = 3;
    }

    message SpeedRemoteDataModel {
        float ratio = 1;
        float speed = 2;
    }
    
    int64 id = 1;
    
    RideStatus rideStatus = 2;

    optional CarRemoteDataModel car = 3;
    
    optional DriverRemoteDataModel driver = 4;
    
    repeated LocationRemoteDataModel waypoints = 5;

    repeated CoordinateRemoteDataModel route = 6;

    repeated SpeedRemoteDataModel speeds = 7;

    optional int32 routeDistance = 8;

    optional int32 estimatedPrice = 9;

    int32 actualPrice = 10;

    optional int32 estimatedDuration = 11;
}

message CancelOrderRemoteDataModel {
    
    enum CancelRideReason {
        BAD_DRIVER = 0;
        ACCIDENT = 1;
        ANOTHER = 2;
    }

    int64 orderId = 1;
    
    CancelRideReason reason = 2;
    
    optional string comment = 3;
}

message ArrivedAtLocationRemoteDataModel {

     int64 orderId = 1;
    
     CoordinateRemoteDataModel coordinate = 2;
}